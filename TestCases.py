# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TestCases.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AnotherWindow(object):
    def setupUi(self, AnotherWindow):
        AnotherWindow.setObjectName("AnotherWindow")
        AnotherWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(AnotherWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(30, 70, 271, 17))
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(30, 100, 291, 17))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_3 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_3.setGeometry(QtCore.QRect(30, 130, 201, 17))
        self.checkBox_3.setObjectName("checkBox_3")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 40, 141, 16))
        self.label.setObjectName("label")
        self.checkBox_4 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_4.setGeometry(QtCore.QRect(30, 210, 291, 17))
        self.checkBox_4.setObjectName("checkBox_4")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 180, 141, 16))
        self.label_2.setObjectName("label_2")
        self.checkBox_5 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_5.setGeometry(QtCore.QRect(30, 240, 291, 17))
        self.checkBox_5.setObjectName("checkBox_5")
        self.checkBox_6 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_6.setGeometry(QtCore.QRect(30, 270, 201, 17))
        self.checkBox_6.setObjectName("checkBox_6")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 320, 241, 16))
        self.label_3.setObjectName("label_3")
        self.checkBox_8 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_8.setGeometry(QtCore.QRect(30, 380, 301, 17))
        self.checkBox_8.setObjectName("checkBox_8")
        self.checkBox_9 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_9.setGeometry(QtCore.QRect(30, 350, 291, 17))
        self.checkBox_9.setObjectName("checkBox_9")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(30, 420, 301, 31))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_2.setGeometry(QtCore.QRect(30, 510, 301, 31))
        self.textEdit_2.setObjectName("textEdit_2")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 400, 131, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 490, 81, 16))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(450, 40, 151, 16))
        self.label_6.setObjectName("label_6")
        self.checkBox_10 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_10.setGeometry(QtCore.QRect(450, 70, 301, 17))
        self.checkBox_10.setObjectName("checkBox_10")
        self.checkBox_11 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_11.setGeometry(QtCore.QRect(450, 100, 291, 17))
        self.checkBox_11.setObjectName("checkBox_11")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(450, 180, 151, 16))
        self.label_7.setObjectName("label_7")
        self.checkBox_12 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_12.setGeometry(QtCore.QRect(450, 210, 291, 17))
        self.checkBox_12.setObjectName("checkBox_12")
        self.checkBox_13 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_13.setGeometry(QtCore.QRect(450, 240, 281, 17))
        self.checkBox_13.setObjectName("checkBox_13")
        self.checkBox_14 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_14.setGeometry(QtCore.QRect(450, 270, 291, 17))
        self.checkBox_14.setObjectName("checkBox_14")
        self.checkBox_15 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_15.setGeometry(QtCore.QRect(450, 300, 281, 17))
        self.checkBox_15.setObjectName("checkBox_15")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(450, 350, 171, 16))
        self.label_8.setObjectName("label_8")
        self.checkBox_16 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_16.setGeometry(QtCore.QRect(450, 380, 221, 17))
        self.checkBox_16.setObjectName("checkBox_16")
        self.checkBox_17 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_17.setGeometry(QtCore.QRect(450, 470, 221, 17))
        self.checkBox_17.setObjectName("checkBox_17")
        self.textEdit_3 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_3.setGeometry(QtCore.QRect(450, 430, 301, 31))
        self.textEdit_3.setObjectName("textEdit_3")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(450, 410, 131, 16))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(450, 490, 131, 16))
        self.label_10.setObjectName("label_10")
        self.textEdit_4 = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit_4.setGeometry(QtCore.QRect(450, 510, 301, 31))
        self.textEdit_4.setObjectName("textEdit_4")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(0, 0, 801, 561))
        self.frame.setStyleSheet("background:rgb(205, 235, 255)")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.checkBox_7 = QtWidgets.QCheckBox(self.frame)
        self.checkBox_7.setGeometry(QtCore.QRect(30, 470, 331, 17))
        self.checkBox_7.setObjectName("checkBox_7")
        self.frame.raise_()
        self.checkBox.raise_()
        self.checkBox_2.raise_()
        self.checkBox_3.raise_()
        self.label.raise_()
        self.checkBox_4.raise_()
        self.label_2.raise_()
        self.checkBox_5.raise_()
        self.checkBox_6.raise_()
        self.label_3.raise_()
        self.checkBox_8.raise_()
        self.checkBox_9.raise_()
        self.textEdit.raise_()
        self.textEdit_2.raise_()
        self.label_4.raise_()
        self.label_5.raise_()
        self.label_6.raise_()
        self.checkBox_10.raise_()
        self.checkBox_11.raise_()
        self.label_7.raise_()
        self.checkBox_12.raise_()
        self.checkBox_13.raise_()
        self.checkBox_14.raise_()
        self.checkBox_15.raise_()
        self.label_8.raise_()
        self.checkBox_16.raise_()
        self.checkBox_17.raise_()
        self.textEdit_3.raise_()
        self.label_9.raise_()
        self.label_10.raise_()
        self.textEdit_4.raise_()
        AnotherWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(AnotherWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        AnotherWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(AnotherWindow)
        self.statusbar.setObjectName("statusbar")
        AnotherWindow.setStatusBar(self.statusbar)

        self.retranslateUi(AnotherWindow)
        QtCore.QMetaObject.connectSlotsByName(AnotherWindow)

    def retranslateUi(self, AnotherWindow):
        _translate = QtCore.QCoreApplication.translate
        AnotherWindow.setWindowTitle(_translate("AnotherWindow", "AnotherWindow"))
        self.checkBox.setText(_translate("AnotherWindow", "Light1 Occupancy (1= Train Present 0=Not Present)"))
        self.checkBox_2.setText(_translate("AnotherWindow", "Switch 1 Request (1=Want to Open, 0=Want to Close)"))
        self.checkBox_3.setText(_translate("AnotherWindow", "Switch 1 Position (1=Open 0=Closed)"))
        self.label.setText(_translate("AnotherWindow", "Test Case 1, Switch Control"))
        self.checkBox_4.setText(_translate("AnotherWindow", "Station1 Occupancy (1= Train Present 0=Not Present)"))
        self.label_2.setText(_translate("AnotherWindow", "Test Case 2, Switch Control"))
        self.checkBox_5.setText(_translate("AnotherWindow", "Switch 2 Request (1=Want to Open, 0=Want to Close)"))
        self.checkBox_6.setText(_translate("AnotherWindow", "Switch 2 Position (1=Open 0=Closed)"))
        self.label_3.setText(_translate("AnotherWindow", "Test Case 3, Station Occupancy/Speed/Authority"))
        self.checkBox_8.setText(_translate("AnotherWindow", "Station2 Occupancy (1= Train Present 0=Not Present)"))
        self.checkBox_9.setText(_translate("AnotherWindow", "Station1 Occupancy (1= Train Present 0=Not Present)"))
        self.label_4.setText(_translate("AnotherWindow", "North End Speed Input"))
        self.label_5.setText(_translate("AnotherWindow", "Authority Input"))
        self.label_6.setText(_translate("AnotherWindow", "Test Case 4, Crossing Control"))
        self.checkBox_10.setText(_translate("AnotherWindow", "Crossing1 Occupancy (1= Train Present 0=Not Present)"))
        self.checkBox_11.setText(_translate("AnotherWindow", "Crossing2 Occupancy (1= Train Present 0=Not Present)"))
        self.label_7.setText(_translate("AnotherWindow", "Test Case 5, Light Control"))
        self.checkBox_12.setText(_translate("AnotherWindow", "Station1 Occupancy (1= Train Present 0=Not Present)"))
        self.checkBox_13.setText(_translate("AnotherWindow", "Light1 Occupancy (1=Train Present 0=Not Present)"))
        self.checkBox_14.setText(_translate("AnotherWindow", "Station2 Occupancy (1= Train Present 0=Not Present)"))
        self.checkBox_15.setText(_translate("AnotherWindow", "Light2 Occupancy (1=Train Present 0=Not Present)"))
        self.label_8.setText(_translate("AnotherWindow", "Test Case 6, Fault Status Display"))
        self.checkBox_16.setText(_translate("AnotherWindow", "Fault Area 1 Input (1=Fault 0=No Fault)"))
        self.checkBox_17.setText(_translate("AnotherWindow", "Fault Area 6 Input (1=Fault 0=No Fault)"))
        self.label_9.setText(_translate("AnotherWindow", "Fault Area 1 Type Input"))
        self.label_10.setText(_translate("AnotherWindow", "Fault Area 6 Type Input"))
        self.checkBox_7.setText(_translate("AnotherWindow", "Authority Change Input (1=Aurhority Changed 0=Not Changed)"))
        self.realTime()

    def realTime(self): 
        self.checkBox.clicked.connect(self.Check1)
        self.checkBox_2.clicked.connect(self.Check2)
        self.checkBox_3.clicked.connect(self.Check3)
        self.checkBox_4.clicked.connect(self.Check4)
        self.checkBox_5.clicked.connect(self.Check5)
        self.checkBox_6.clicked.connect(self.Check6)
        self.checkBox_7.clicked.connect(self.Check7)
        self.checkBox_8.clicked.connect(self.Check8)
        self.checkBox_9.clicked.connect(self.Check9)
        self.checkBox_10.clicked.connect(self.Check10)
        self.checkBox_11.clicked.connect(self.Check11)
        self.checkBox_12.clicked.connect(self.Check12)
        self.checkBox_13.clicked.connect(self.Check13)
        self.checkBox_14.clicked.connect(self.Check14)
        self.checkBox_15.clicked.connect(self.Check15)
        self.checkBox_16.clicked.connect(self.Check16)
        self.checkBox_17.clicked.connect(self.Check17)
       
    def Check1(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox.isChecked():
            Content[8]='Light1Occ= '+str(1)+'\n'
        else:
            Content[8]='Light1Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check2(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_2.isChecked():
            Content[0]='SW1Req= '+str(1)+'\n'
        else:
            Content[0]='SW1Req= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check3(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_3.isChecked():
            Content[1]='SW1Pos= '+str(1)+'\n'
        else:
            Content[1]='SW1Pos= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check4(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_4.isChecked():
            Content[10]='ST1Occ= '+str(1)+'\n'
        else:
            Content[10]='ST1Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check5(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_5.isChecked():
            Content[2]='SW2Req= '+str(1)+'\n'
        else:
            Content[2]='SW2Req= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)
    
    def Check6(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_6.isChecked():
            Content[3]='SW2Pos= '+str(1)+'\n'
        else:
            Content[3]='SW2Pos= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)
    
    def Check9(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_9.isChecked():
            Content[10]='ST1Occ= '+str(1)+'\n'
        else:
            Content[10]='ST1Occ= '+str(0)+'\n'
        if self.textEdit.toPlainText() != "" and self.textEdit.toPlainText().isdecimal():
            Content[27]="NESpeed= "+self.textEdit.toPlainText()+" MPH\n"
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check8(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_8.isChecked():
            Content[13]='ST2Occ= '+str(1)+'\n'
        else:
            Content[13]='ST2Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)
    
    def Check7(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()
        if self.textEdit_2.toPlainText() != "" and self.textEdit_2.toPlainText().isdecimal():      
            if self.checkBox_7.isChecked():
                Content[16]='AuthChangeReq= '+str(1)+'\n'
            else:
                Content[16]='AuthChangeReq= '+str(0)+'\n'
            Content[29]="Auth= "+self.textEdit_2.toPlainText()+" mi.\n"
            with open('ControllerSignals.txt','w') as file:
                file.writelines(Content)
        else:
            print("Error: Invalid Authority")
        
    def Check10(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_10.isChecked():
            Content[14]='Cross1Occ= '+str(1)+'\n'
        else:
            Content[14]='Cross1Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check11(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_11.isChecked():
            Content[15]='Cross2Occ= '+str(1)+'\n'
        else:
            Content[15]='Cross2Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check12(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_12.isChecked():
            Content[10]='ST1Occ= '+str(1)+'\n'
        else:
            Content[10]='ST1Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check13(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_13.isChecked():
            Content[8]='Light1Occ= '+str(1)+'\n'
        else:
            Content[8]='Light1Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check14(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_14.isChecked():
            Content[13]='ST2Occ= '+str(1)+'\n'
        else:
            Content[13]='ST2Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check15(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()       
        if self.checkBox_15.isChecked():
            Content[11]='Light2Occ= '+str(1)+'\n'
        else:
            Content[11]='Light2Occ= '+str(0)+'\n'
        with open('ControllerSignals.txt','w') as file:
            file.writelines(Content)

    def Check16(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()  
        if self.textEdit_3.toPlainText() != "":     
            if self.checkBox_16.isChecked():
                Content[30]='FA1= '+str(1)+'\n'
            else:
                Content[30]='FA1= '+str(0)+'\n'
            Content[31]="FA1Type= "+self.textEdit_3.toPlainText()+'\n'
            with open('ControllerSignals.txt','w') as file:
                file.writelines(Content)
        else:
            print("Error: Failure Type Failed to Parse")

    def Check17(self):
        with open('ControllerSignals.txt','r') as file:
            Content=file.readlines()  
        if self.textEdit_4.toPlainText() != "":     
            if self.checkBox_17.isChecked():
                Content[40]='FA6= '+str(1)+'\n'
            else:
                Content[40]='FA6= '+str(0)+'\n'
            Content[41]="FA6Type= "+self.textEdit_4.toPlainText()+'\n'
            with open('ControllerSignals.txt','w') as file:
                file.writelines(Content)
        else:
            print("Error: Failure Type Failed to Parse")

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    AnotherWindow = QtWidgets.QMainWindow()
    ui = Ui_AnotherWindow()
    ui.setupUi(AnotherWindow)
    AnotherWindow.show()
    sys.exit(app.exec_())